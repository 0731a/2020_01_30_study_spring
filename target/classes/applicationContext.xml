<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

	<context:component-scan base-package="com.springbook.biz"></context:component-scan>
	
	<!--
	<bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl">
	 	<property name="userDAO" ref="userDAO" />
	</bean>
	
	<bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO"/>
	 -->
	 
	 
	 
	 <!--  AOP 관련 설정  -->
	 <aop:aspectj-autoproxy></aop:aspectj-autoproxy> <!-- annotation을 통한 AOP 설정을 위한 자동 스캔 -->
	 
	 <bean id="log" class="com.springbook.biz.common.AOP.LogAdviceByBean"></bean>
	 <aop:config>
		<aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))" />
		<aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.get*(..))" />
		
		<aop:aspect ref="log">
			<aop:before pointcut-ref="getPointcut" method="printLog" />
		</aop:aspect>
	</aop:config>
	
	
	<!--  DATA SOURCE 관련 설정 -->
	
	<!-- JdbcTemplate 가 사용할 data source, 스프링 컨테이너가 생성 -->
	<!-- DataSource 인터페이스를 구현한 클래스는 다양하지만 일반적으로 가장 많이 사용하는 Apache의 BasicDataSource 사용  -->
	
	<!--  properties 파일 내에 설정을 기입하고 불러오기 위함, 굳이 외부 파일을 이용하지 않고 value에 string으로 바로 대입 가능 -->
	<context:property-placeholder location="classpath:config/database.properties" />

	<bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	
	

</beans>
